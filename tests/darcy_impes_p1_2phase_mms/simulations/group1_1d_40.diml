<?xml version='1.0' encoding='utf-8'?>
<darcy_impes_options>
  <simulation_name>
    <string_value lines="1">group1_1d_40</string_value>
    <comment>Saturation sources have been computed using SymPy.  Velocity divergence minus saturation source should sum to zero over the phases:
0
</comment>
  </simulation_name>
  <geometry>
    <dimension>
      <integer_value rank="0">1</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <!-- assume that simulations take place in a directory parallel
           to meshes/ -->
      <from_file file_name="../meshes/line_40">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">1</integer_value>
          </polynomial_degree>
          <element_type>
            <string_value>lagrangian</string_value>
          </element_type>
        </mesh_shape>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="ElementWiseMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">0</integer_value>
          </polynomial_degree>
          <element_type>
            <string_value>lagrangian</string_value>
          </element_type>
        </mesh_shape>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="SaturationSourceMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">1</integer_value>
          </polynomial_degree>
          <element_type>
            <string_value>lagrangian</string_value>
          </element_type>
        </mesh_shape>
        <mesh_continuity>
          <string_value>continuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">1</integer_value>
      </degree>
      <controlvolume_surface_degree>
        <integer_value rank="0">1</integer_value>
      </controlvolume_surface_degree>
    </quadrature>
    <disable_geometric_data_cache/>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">1.0</real_value>
      </constant>
    </dump_period>
    <output_mesh name="PressureMesh"/>
    <stat>
      <output_at_start/>
    </stat>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">0.0125</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">1.0</real_value>
    </finish_time>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude>
        <real_value rank="0">1.0</real_value>
      </magnitude>
      <vector_field name="GravityDirection" rank="1">
        <prescribed>
          <mesh name="ElementWiseMesh"/>
          <value name="WholeMesh">
            <constant>
              <real_value shape="1" dim1="dim" rank="1">1</real_value>
            </constant>
          </value>
        </prescribed>
      </vector_field>
    </gravity>
  </physical_parameters>
  <material_phase name="Phase1">
    <scalar_field name="Pressure" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <solver name="DefaultSolverOptionsGMRESMG">
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="mg"/>
          <relative_error>
            <real_value rank="0">1.0e-10</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return (250.0*cos(pi*t) + 750.0)*cos(pi*X[0])</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="pressure1">
          <surface_ids>
            <integer_value shape="1" rank="1">2</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_strongly/>
	    <python>
              <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return (250.0*cos(pi*t) + 750.0)*cos(pi*X[0])</string_value>
  	    </python>
          </type>
        </boundary_conditions>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field name="Saturation" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
	<face_value name="FiniteElement">
          <limit_face_value>
            <limiter name="Sweby"/>
          </limit_face_value>
        </face_value>
        <scalar_field name="Source" rank="0">
          <prescribed>
            <mesh name="SaturationSourceMesh"/>
            <value name="WholeMesh">
              <python>
                <string_value type="code" lines="20" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return 9.0860692115942e-5*pi**2*(0.75 - 0.3*exp(-1.0*X[0])/(1.0*t + 1.))**4*(250.0*cos(pi*t) + 750.0)*cos(pi*X[0]) - 0.00010903283053913*(0.75 - 0.3*exp(-1.0*X[0])/(1.0*t + 1.))**3*(-pi*(250.0*cos(pi*t) + 750.0)*sin(pi*X[0]) - 1.284)*exp(-1.0*X[0])/(1.0*t + 1.) + 0.12*exp(-1.0*X[0])/(1.0*t + 1.)**2</string_value>
              </python>
            </value>
            <stat>
              <include_cv_stats/>
            </stat>
          </prescribed>
        </scalar_field>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="RelativePermeability" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
	<correlation name="Corey2Phase">
          <residual_saturations>
            <real_value shape="2" rank="1">0.05 0.1</real_value>
          </residual_saturations>
        </correlation>
        <face_value name="RelPermOverSatUpwind"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="Viscosity" rank="0">
      <prescribed>
        <mesh name="ElementWiseMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="0">1.725e-05</real_value>
          </constant>
        </value>
        <stat>
          <include_cv_stats/>
        </stat>
      </prescribed>
    </scalar_field>
    <scalar_field name="Density" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <equation_of_state name="IncompressibleLinear">
          <reference_density>
            <real_value rank="0">1.284</real_value>
          </reference_density>
        </equation_of_state>
        <face_value name="FirstOrderUpwind"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <vector_field name="DarcyVelocity" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </vector_field>
    <scalar_field name="DarcyVelocityOverPorosityCFL" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <vector_field name="TotalDarcyVelocity" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </vector_field>
    <scalar_field name="DivergenceTotalDarcyVelocity" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="Mobility" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="TotalMobility" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="FractionalFlow" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="SumSaturation" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="AveragePressure" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <vector_field name="BulkDarcyVelocity" rank="1">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </vector_field>
        <scalar_field name="AnalyticalPressureSolution">
      <prescribed>
        <mesh name="PressureMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return (250.0*cos(pi*t) + 750.0)*cos(pi*X[0])</string_value>
          </python>
        </value>
        <stat>
          <include_cv_stats/>
        </stat>
      </prescribed>
    </scalar_field>
    <scalar_field name="PressureAbsError">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm source_field_2_type="scalar" name="scalar_difference" source_field_1_name="Pressure" source_field_2_name="AnalyticalPressureSolution" material_phase_support="single" source_field_1_type="scalar">
          <absolute_difference/>
        </algorithm>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>

  </material_phase>
  <material_phase name="Phase2">
    <scalar_field name="Pressure" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="CapilliaryPressure" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="scalar_python_diagnostic" material_phase_support="single">
          <string_value type="code" lines="20" language="python">
S2_field = state.scalar_fields["Saturation"]
Sr2 = 0.1
for n in range(field.node_count):
   S2 = S2_field.node_val(n)
   pc = 100.0*((S2 - Sr2)/(-Sr2 + 1.0))**(-0.5)
   # a minus sign is needed because pressure2 appears to be computed
   # in the source code as pressure1 + capillary_pressure
   field.set(n, -pc)</string_value>
        </algorithm>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="Saturation" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return 0.2 + 0.3*exp(-1.0*X[0])/(1.0*t + 1.)</string_value>
          </python>
        </initial_condition>
        <scalar_field name="Source" rank="0">
          <prescribed>
            <mesh name="SaturationSourceMesh"/>
            <value name="WholeMesh">
              <python>
                <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return 9.404081634e-7*(0.25 + 0.3*exp(-1.0*X[0])/(1.0*t + 1.))**2*(0.75 - 0.3*exp(-1.0*X[0])/(1.0*t + 1.))*(-16.6666666666667*(0.111111111111111 + 0.333333333333333*exp(-1.0*X[0])/(1.0*t + 1.))**(-1.5)*exp(-1.0*X[0])/(1.0*t + 1.) - pi*(250.0*cos(pi*t) + 750.0)*sin(pi*X[0]) - 1000.0)*exp(-1.0*X[0])/(1.0*t + 1.) - 1.567346939e-6*(0.25 + 0.3*exp(-1.0*X[0])/(1.0*t + 1.))**2*(-(0.75 - 0.3*exp(-1.0*X[0])/(1.0*t + 1.))**2 + 1.0)*(-8.33333333333333*(0.111111111111111 + 0.333333333333333*exp(-1.0*X[0])/(1.0*t + 1.))**(-2.5)*exp(-2.0*X[0])/(1.0*t + 1.)**2 + 16.6666666666667*(0.111111111111111 + 0.333333333333333*exp(-1.0*X[0])/(1.0*t + 1.))**(-1.5)*exp(-1.0*X[0])/(1.0*t + 1.) - pi**2*(250.0*cos(pi*t) + 750.0)*cos(pi*X[0])) + 9.404081634e-7*(0.25 + 0.3*exp(-1.0*X[0])/(1.0*t + 1.))*(-(0.75 - 0.3*exp(-1.0*X[0])/(1.0*t + 1.))**2 + 1.0)*(-16.6666666666667*(0.111111111111111 + 0.333333333333333*exp(-1.0*X[0])/(1.0*t + 1.))**(-1.5)*exp(-1.0*X[0])/(1.0*t + 1.) - pi*(250.0*cos(pi*t) + 750.0)*sin(pi*X[0]) - 1000.0)*exp(-1.0*X[0])/(1.0*t + 1.) - 0.12*exp(-1.0*X[0])/(1.0*t + 1.)**2</string_value>
              </python>
            </value>
            <stat>
              <include_cv_stats/>
            </stat>
          </prescribed>
        </scalar_field>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field name="RelativePermeability" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="Viscosity" rank="0">
      <prescribed>
        <mesh name="ElementWiseMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="0">0.001</real_value>
          </constant>
        </value>
        <stat>
          <include_cv_stats/>
        </stat>
      </prescribed>
    </scalar_field>
    <scalar_field name="Density" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <equation_of_state name="IncompressibleLinear">
          <reference_density>
            <real_value rank="0">1000.0</real_value>
          </reference_density>
        </equation_of_state>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <vector_field name="DarcyVelocity" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
  	<boundary_conditions name="velocity2_boundary1">
          <surface_ids>
            <integer_value shape="1" rank="1">1</integer_value>
          </surface_ids>
          <type name="prescribed_normal_flow">
            <python>
              <string_value type="code" lines="20" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return 1.567346939e-6*(0.25 + 0.3*exp(-1.0*X[0])/(1.0*t + 1.))**2*(-(0.75 - 0.3*exp(-1.0*X[0])/(1.0*t + 1.))**2 + 1.0)*(-16.6666666666667*(0.111111111111111 + 0.333333333333333*exp(-1.0*X[0])/(1.0*t + 1.))**(-1.5)*exp(-1.0*X[0])/(1.0*t + 1.) - pi*(250.0*cos(pi*t) + 750.0)*sin(pi*X[0]) - 1000.0)</string_value>
            </python>
          </type>
        </boundary_conditions>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </vector_field>
    <scalar_field name="DarcyVelocityOverPorosityCFL" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="Mobility" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="FractionalFlow" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
        <scalar_field name="AnalyticalSaturationSolution">
      <prescribed>
        <mesh name="PressureMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return 0.2 + 0.3*exp(-1.0*X[0])/(1.0*t + 1.)</string_value>
          </python>
        </value>
        <stat>
          <include_cv_stats/>
        </stat>
      </prescribed>
    </scalar_field>
    <scalar_field name="SaturationAbsError">
      <diagnostic>
        <mesh name="CoordinateMesh"/>
        <algorithm source_field_2_type="scalar" name="scalar_difference" source_field_1_name="Saturation" source_field_2_name="AnalyticalSaturationSolution" material_phase_support="single" source_field_1_type="scalar">
          <absolute_difference/>
        </algorithm>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>

  </material_phase>
  <porous_media>
    <scalar_field name="Porosity">
      <prescribed>
        <mesh name="ElementWiseMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="0">0.4</real_value>
          </constant>
        </value>
        <stat>
          <include_cv_stats/>
        </stat>
      </prescribed>
    </scalar_field>
    <scalar_field name="AbsolutePermeability">
      <prescribed>
        <mesh name="ElementWiseMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="0">1.567346939e-09</real_value>
          </constant>
        </value>
        <stat>
          <include_cv_stats/>
        </stat>
      </prescribed>
    </scalar_field>
  </porous_media>
</darcy_impes_options>