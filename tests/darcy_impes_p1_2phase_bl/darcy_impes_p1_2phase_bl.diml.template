{% extends "diml.template" %}


{% macro velocity_bc(inlet_normal_flow) %}
<boundary_conditions name="left">
  <surface_ids>
    <integer_value shape="1" rank="1">{{ inlet_id }}</integer_value>
  </surface_ids>
  {% if inlet_normal_flow %}
  <type name="prescribed_normal_flow">
    <constant>
      <real_value rank="0">{{ inlet_normal_flow }}</real_value>
    </constant>
  </type>
  <type name="no_normal_flow"/>
</boundary_conditions>
{% if dim_number > 1 %}
<boundary_conditions name="wall_flow">
  <surface_ids>
    <integer_value shape="{{ wall_ids|length }}" rank="1">{{ wall_ids|join(' ') }}</integer_value>
  </surface_ids>
  <type name="no_normal_flow"/>
</boundary_conditions>
{% endif %}
{% endmacro %}

{% block velocity1_bc_block %}
{{ darcy_velocity_bc(0) }}
{% endblock %}

{% block velocity2_bc_block %}
{{ darcy_velocity_bc(-1.0) }}
{% endblock %}


{% macro error_variables(this_phase) %}
{% for ef in examined_fields %}
{% if ef.phase_name == this_phase %}
<scalar_field name="Interpolated{{ ef.variable_name }}ReferenceSolution">
  <prescribed>
    <mesh name="PressureMesh"/>
    <value name="WholeMesh">
      <python>
        <string_value lines="20" type="code" language="python">
def val(X, t):
    import numpy
    data = numpy.fromfile('../reference_solution/{{ case }}_{{ field }}.txt', sep='\t')
    data = data.reshape((len(data)/2, 2))
    return numpy.interp(X[0], data[:,0], data[:,1])</string_value>
      </python>
    </value>
    <stat>
      <include_cv_stats/>
    </stat>
    <do_not_recalculate/>
  </prescribed>
</scalar_field>
<scalar_field name="{{ ef.variable_name }}AbsError">
  <diagnostic>
    <mesh name="PressureMesh"/>
    <algorithm source_field_2_type="scalar" name="scalar_difference" source_field_1_name="{{ ef.variable_name }}" source_field_2_name="Interpolated{{ ef.variable_name }}ReferenceSolution" material_phase_support="single" source_field_1_type="scalar">
      <absolute_difference/>
    </algorithm>
    <stat>
      <include_cv_stats/>
    </stat>
    <consistent_interpolation/>
  </diagnostic>
</scalar_field>
{% endif %}
{% endfor %}
{% endmacro %}


{% block other_fields_phase1_block %}
{{ error_variables('Phase1') }}
{% endblock %}

{% block other_fields_phase2_block %}
{{ error_variables('Phase2') }}
{% endblock %}

